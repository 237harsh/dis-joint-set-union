
#include <bits/stdc++.h>
using namespace std;
//find parent of   node
int findpar(int node,vector<int>&par)
{
    if(node==par[node])
       return node;
       else
       return par[node]=findpar(par[node],par);
}
int main()
{
    
    int n,i;
    cout<<"enter no of nodes\n";
    cin>>n;
    
    vector<int>par(n+1);
     vector<int>rk(n+1,0);
    for(i=0;i<=n;i++)
    {
      par[i]=i;
    }
    cout<<"enter no of edges\n";
    
    int m;
    cin>>m;
    for(i=0;i<m;i++)
    {
        cout<<"enter value of two sets\n";
        int u,v;
        cin>>u>>v;
        u=findpar(u,par);// update u with its parent from par vector;
        v=findpar(v,par);// update v with its parent from par vector;
        
        if(rk[u]<rk[v])//compare rank then make choice of parent 
        {
            par[u]=v;//heigher rank node will serve as parent node;
            
        }
        else if(rk[v]<rk[u])
        {
            par[v]=u;
            
        }
        else if(rk[v]==rk[u])//if rank becomes equal take any node as parent node and
                            //increase rank of parent node
        {
            par[u]=v;
            rk[v]++;
        }
    }
    
for(int i=1;i<=n;i++)
{
    printf("par %d -> %d\n",i,par[i]);
    
}
    return 0;
}

